OPT = -g0 -O3
SRCFILES = main_emcc.c engine.c  utils.c audio.c
LEVEL_SOURCES = level1.data level2.data level3.data level4.data level5.data level6.data level7.data

SOURCES = $(addprefix src/, $(SRCFILES))
CC = emcc
TARGET = index.js
OBJECTS =$(SOURCES:.c=.bc)
LEVEL_CS = $(addprefix src/, $(LEVEL_SOURCES:.data=.c))

LDFLAGS= --llvm-lto=3
LIBS= -lglfw3 -lopenal ../iron/libiron.bc ../libicydb/libicydb.bc
CFLAGS = -std=c11 $(OPT) -Wall -Wextra -Werror=implicit-function-declaration -Wformat=0 -D_GNU_SOURCE  -fdiagnostics-color -s USE_GLFW=3 -s WASM=1 -I.. -I../libicydb/include 
all: $(TARGET)
$(TARGET): $(OBJECTS) makefile.emcc
	$(CC) $(CFLAGS) $(OBJECTS) $(LIBS) -o $@ --verbose

%.bc: %.c $(HEADERS)
	$(CC) -c  $(CFLAGS) $< -o $@ -MMD -MF $@.depends
src/engine.bc: src/flat_geom.shader.c src/starry.shader.c $(LEVEL_CS)

src/flat_geom.shader.c: src/flat_geom.vs src/flat_geom.fs
	xxd -i src/flat_geom.vs > src/flat_geom.shader.c
	xxd -i src/flat_geom.fs >> src/flat_geom.shader.c
src/starry.shader.c: src/starry.vs src/starry.fs
	xxd -i src/starry.vs > src/starry.shader.c
	xxd -i src/starry.fs >> src/starry.shader.c
src/level%.c: level%.data
	xxd -i $< > $@


depend: h-depend
clean:
	rm $(OBJECTS) $(TARGET) src/*.bc.depends
-include $(OBJECTS:.bc=.bc.depends)

install: $(TARGET)
	mkdir -v /usr/include/iron |true
	cp -v ./*.h /usr/include/iron
	cp -v ./libiron.so /usr/lib/
