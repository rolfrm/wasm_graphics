// This file is auto generated by icy-table.
typedef int square_id;
typedef int square_type;

#include "icydb.h"
typedef struct _squares{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const square_id * k1, const square_id * k2);
  const size_t sizes[4];

  square_id * id;
  vec2 * pos;
  vec2 * size;
  square_type * type;
  icy_mem * id_area;
  icy_mem * pos_area;
  icy_mem * size_area;
  icy_mem * type_area;
}squares;

squares * squares_create(const char * optional_name);
void squares_set(squares * table, square_id id, vec2 pos, vec2 size, square_type type);
void squares_insert(squares * table, square_id * id, vec2 * pos, vec2 * size, square_type * type, size_t count);
void squares_lookup(squares * table, square_id * keys, size_t * out_indexes, size_t count);
void squares_remove(squares * table, square_id * keys, size_t key_count);
void squares_clear(squares * table);
void squares_unset(squares * table, square_id key);
bool squares_try_get(squares * table, square_id * id, vec2 * pos, vec2 * size, square_type * type);
void squares_print(squares * table);
size_t squares_iter(squares * table, square_id * keys, size_t keycnt, square_id * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
