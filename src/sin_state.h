// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _sin_state{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const square_id * k1, const square_id * k2);
  const size_t sizes[4];

  square_id * id;
  vec2 * dir;
  f32 * freq;
  f32 * phase;
  icy_mem * id_area;
  icy_mem * dir_area;
  icy_mem * freq_area;
  icy_mem * phase_area;
}sin_state;

sin_state * sin_state_create(const char * optional_name);
void sin_state_set(sin_state * table, square_id id, vec2 dir, f32 freq, f32 phase);
void sin_state_insert(sin_state * table, square_id * id, vec2 * dir, f32 * freq, f32 * phase, size_t count);
void sin_state_lookup(sin_state * table, square_id * keys, size_t * out_indexes, size_t count);
void sin_state_remove(sin_state * table, square_id * keys, size_t key_count);
void sin_state_clear(sin_state * table);
void sin_state_unset(sin_state * table, square_id key);
bool sin_state_try_get(sin_state * table, square_id * id, vec2 * dir, f32 * freq, f32 * phase);
void sin_state_print(sin_state * table);
size_t sin_state_iter(sin_state * table, square_id * keys, size_t keycnt, square_id * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
